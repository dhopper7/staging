<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Public Methods</title>
	<link rel="stylesheet" type="text/css" href="templates/wwhelp.css">
		  <script src="templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuite/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="bmp/topic.gif">&nbsp;Public Methods
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body"><div class="banner">addUserData( array $adata  )</div>

Add a custom data to the grid footer row if it is enabled. Also can be used to transport additional data in userdata array to be used later at client side. The syntax is $grid-&gt;addUserData(array("Name1"=&gt;"Data1",...));	The method is executed after the sumarry rows are executed, so it can  overwrite some summary data which is palced on the footer.<br>
Parameters:<br>
<ul>

<li> array   	$adata: associative array<br>
</ul><p><div class="banner">buildSearch( $filter, $otype='str'  )</div>

Build a where clause friom filter string compatible with string posted from grid when a search is performed.<br>
Usually this method is used separatley.<br>
Parameters:<br>
<ul>

<li> string   	$filter: the string to be parsed<br>
<li> string   	$otype: determines the return value. if it is = str the return is a string, otherviese array with values redy to be used in prepared statement<br>
<li> return string or array depending on $otype parameter <br>
</ul><p><div class="banner">void debugout( ) </div><p>Prints all executed SQL queries to file or console <p>API Tags:<br>
See: jqGrid::$logtofile<br>
Access: public <p><div class="banner">exportToCsv( [ $summary = null], [ $params = null], [ $colmodel = null], [$echo = true], [$filename = 'exportdata.csv'], [$sep=';'], [$sepreplace='']  )<br>
</div>

Public method to export a grid data to csv data.<br>
Can use the ExportCommand. If this command is not set uses _setSQL to set the query.     <br>
The number of rows exported is limited from gSQLMaxRows variable     <br>
@see _setSQL API.<p>Parameters:<br>
<ul>

<li> array   	$summary:  	- set which columns should be sumarized in order to be displayed to the grid By default this parameter uses SQL SUM function: array("colmodelname"=&gt;"sqlname"); It can be set to use the other one this way array("colmodelname"=&gt;array("sqlname"=&gt;"AVG")); By default the first field correspond to the name of colModel the second to the database name<br>
<li> array   	$params:  	parameter values passed to the SQL if the query is with parameters<br>
<li> array   	$colmodel:  	- diffrent descriptions for the headars, width, hidden cols This array is actually a colModel array in jqGrid. The array can look like  Array( [0]=&gt;Array("label"=&gt;"Some label", "width"=&gt;100, "hidden"=&gt;true, "name"=&gt;"client_id", "formatter"=&gt;"select", editoptions=&gt;...), [1]=&gt;Array("label"=&gt;"Other label", "width"=&gt;80, "hidden"=&gt;false, "name"=&gt;"date",... ), ... )<br>
<li> boolean   	$echo:  	determines if the result should be returned or echoed<br>
<li> string   	$filename:  	the filename to which the sheet can be saved in case if $echo is true<br>
<li> string $sep - the separator for the csv data	 <br>
<li> string $sepreplace - with what to replace the separator if in data     <br>
<li> return string<br>
</ul><p><p><div class="banner">exportToExcel( [ $summary = null], [ $params = null], [ $colmodel = null], [$echo = true], [$filename = 'exportdata.xls']  )<br>
</div>

Export the recordset to excel xml file. Can use the ExportCommand. If this command is not set uses _setSQL to set the query. The number of rows exported is limited from gSQLMaxRows variable<p>Parameters:<br>
<ul>

<li> array   	$summary:  	- set which columns should be sumarized in order to be displayed to the grid By default this parameter uses SQL SUM function: array("colmodelname"=&gt;"sqlname"); It can be set to use the other one this way array("colmodelname"=&gt;array("sqlname"=&gt;"AVG")); By default the first field correspond to the name of colModel the second to the database name<br>
<li> array   	$params:  	parameter values passed to the SQL if the query is with parameters<br>
<li> array   	$colmodel:  	- diffrent descriptions for the headars, width, hidden cols This array is actually a colModel array in jqGrid. The array can look like  Array( [0]=&gt;Array("label"=&gt;"Some label", "width"=&gt;100, "hidden"=&gt;true, "name"=&gt;"client_id", "formatter"=&gt;"select", editoptions=&gt;...), [1]=&gt;Array("label"=&gt;"Other label", "width"=&gt;80, "hidden"=&gt;false, "name"=&gt;"date",... ), ... )<br>
<li> boolean   	$echo:  	determines if the result should be returned or echoed<br>
<li> string   	$filename:  	the filename to which the sheet can be saved in case if $echo is true<br>
</ul><p><br>
<div class="banner">exportToPdf( [ $summary = null], [ $params = null], [ $colmodel = null], [$filename = 'exportdata.pdf']  )<br>
</div>

Export the recordset to PDF file. Can use the ExportCommand. If this command is not set uses _setSQL to set the query. The number of rows exported is limited from gSQLMaxRows variable.<br>
The method uses the setPdfOptions to set various PDF options. See below.<p>Parameters:<br>
<ul>

<li> array   	$summary:  	- set which columns should be sumarized in order to be displayed to the grid By default this parameter uses SQL SUM function: array("colmodelname"=&gt;"sqlname"); It can be set to use the other one this way array("colmodelname"=&gt;array("sqlname"=&gt;"AVG")); By default the first field correspond to the name of colModel the second to the database name<br>
<li> array   	$params:  	parameter values passed to the SQL if the query is with parameters<br>
<li> array   	$colmodel:  	- diffrent descriptions for the headars, width, hidden cols This array is actually a colModel array in jqGrid. The array can look like  Array( [0]=&gt;Array("label"=&gt;"Some label", "width"=&gt;100, "hidden"=&gt;true, "name"=&gt;"client_id", "formatter"=&gt;"select", editoptions=&gt;...), [1]=&gt;Array("label"=&gt;"Other label", "width"=&gt;80, "hidden"=&gt;false, "name"=&gt;"date",... ), ... )<br>
<li> string   	$filename:  	the filename to which the export can be saved<br>
</ul><p><p><div class="banner">getDbDate( )</div><p>Return the current date format used in the undelayed database. The default format is 'Y-m-d'<p>API Tags:<br>
Access:  	public<p><br>
<div class="banner">getDbTime( )</div><p>Return the current datetime format used in the undelayed database. The default format is 'Y-m-d H:i:s'<p>API Tags:<br>
Access:  	public<p><br>
<div class="banner">getGridParams( )</div><p>Return the associative array which contain the parameters that are sended from the grid to request, search, update delete data. These parameters correspond to the prmNames objec in jqGrid Java Script library<p>API Tags:<br>
Access:  	public<p><div class="banner">getUserDate( )</div><p>Return the current date format used from the client. The default format is 'd/m/Y'<p>API Tags:<br>
Access:  	public<p><div class="banner">getUserTime( )</div><p>Return the current date format used from the client. The default format is 'd/m/Y H:i:s'<p>API Tags:<br>
Access:  	public<p><div class="banner">queryGrid( [ $summary = null], [ $params = null], [boolen $echo = true]  )</div>

Return the result of the query to jqGrid. Support searching,paging, sorting. Also support summarized rows. Note that this method output the result in name:value pair. With other words the repeatitems parameter in json or xml reader in jqGrid should be set to false.<p>Parameters:<br>
<ul>

<li> array   	$summary:  	- set which columns should be sumarized in order to be displayed to the grid By default this parameter uses SQL SUM function: array("colmodelname"=&gt;"sqlname"); It can be set to use the other one this way array("colmodelname"=&gt;array("sqlname"=&gt;"AVG")); By default the first field correspond to the name of colModel the second to the database name<br>
<li> array   	$params:  	- parameter values passed to the sql<br>
<li> boolen   	$echo:  	if set to false return the records as object, otherwiese json encoded or xml string depending on the dataType variable<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">querySubGrid( array $params  )</div><p>Return the result of the query for the simple subgrid. The format (json or xml) depend of dataType variable<br>
Parameters:<br>
<ul>

<li> array   	$params:  	parameters passed to the query<br>
</ul><p>API Tags:<br>
Access:  	public<p><div class="banner">selectLimit( [$limsql = ''], [$nrows = -1], [$offset = -1], [ $params = null]  )</div><p>Will select, getting rows from $offset (1-based), for $nrows.This simulates the MySQL "select * from table limit $offset,$nrows" , and the PostgreSQL "select * from table limit $nrows offset $offset". Note that MySQL and PostgreSQL parameter ordering is the opposite of the other. eg. Also supports Microsoft SQL Server SelectLimit('select * from table',3); will return rows 1 to 3 (1-based) SelectLimit('select * from table',3,2); will return rows 3 to 5 (1-based) Return object containing the limited record set. <p>Parameters:<br>
<ul>

<li> string   	$limsql:  	optional sql clause, if not set uses SelctCommand or table.<br>
<li> integer   	$nrows:  	is the number of rows to get<br>
<li> integer   	$offset:  	is the row to start calculations from (1-based)<br>
<li> array   	$params:  	array of bind variables<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setDbDate( string $newformat  )</div><p>Set a new database date format using PHP convensions<br>
Parameters:<br>
<ul>

<li> string   	$newformat:  	- the new database format<br>
</ul><p>API Tags:<br>
Access:  	public<p><br>
<div class="banner">setDbTime( string $newformat  )</div><p>Set a new database datetime format using PHP convensions<br>
Parameters:<br>
<ul>

<li> string   	$newformat:  	- the new database format<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">setGridParams( array $_aparams  )</div><p>Set a grid parameters to identify the action from the grid. Note that these should be set in the grid (prmNames) - i.e the parameters from the grid should equal to the GridParams.<br>
Parameters:<br>
<ul>

<li> array   	$_aparams:  	set new parameter.<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">setPdfOptions( array $apdf  )</div><p>Set options for PDF export.<br>
Parameters:<br>
<ul>

<li> array   	$_appdf:  	set new PDF parameters.<br>
</ul><br>
API Tags:<br>
Access:  	public<p>The default PDF parammeters are stored in protected array and are listed below with the default values<p>array(<br>
      "page_orientation" =&gt; "P",<br>
	"unit"=&gt;"mm",<br>
	"page_format"=&gt;"A4",<br>
	"creator"=&gt;"jqGrid",<br>
	"author"=&gt;"jqGrid",<br>
	"title"=&gt;"jqGrid PDF",<br>
	"subject"=&gt;"Subject",<br>
	"keywords"=&gt;"table, grid",<br>
	"margin_left"=&gt;15,<br>
	"margin_top"=&gt;7,<br>
	"margin_right"=&gt;15,<br>
	"margin_bottom"=&gt;25,<br>
	"margin_header"=&gt;5,<br>
	"margin_footer"=&gt;10,<br>
	"font_name_main"=&gt;"helvetica",<br>
	"font_size_main"=&gt;10,<br>
	"header_logo"=&gt;"",<br>
	"header_logo_width"=&gt;0,<br>
	"header_title"=&gt;"",<br>
	"header_string"=&gt;"",<br>
	"header"=&gt;false,<br>
	"footer"=&gt;true,<br>
	"font_monospaced"=&gt;"courier",<br>
	"font_name_data"=&gt;"helvetica",<br>
	"font_size_data"=&gt;8,	<br>
	"margin_footer"=&gt;10,<br>
	"image_scale_ratio"=&gt;1.25,<br>
	"grid_head_color"=&gt;"#dfeffc",<br>
	"grid_head_text_color"=&gt;"#2e6e9e",<br>
	"grid_draw_color"=&gt;"#5c9ccc",<br>
	"grid_header_height"=&gt;6,	<br>
	"grid_row_color"=&gt;"#ffffff",<br>
	"grid_row_text_color"=&gt;"#000000",<br>
	"grid_row_height"=&gt;5,<br>
	"grid_alternate_rows"=&gt;false,<br>
	"path_to_pdf_class"=&gt;"tcpdf/tcpdf.php"<br>
      "shrink_cell"=&gt;true,<br>
      "reprint_grid_header"=&gt;false,<br>
      "shrink_header"=&gt;true,<br>
	"unicode" =&gt; true,<br>
	"encoding" =&gt; "UTF-8"<br>
);<p><br>
<div class="banner">setSuccessMsg( string $msg  )</div><p>Set a string which will be send to the grid if the operation after add, edit or del is successfull.<br>
Parameters:<br>
<ul>

<li> string   	$msg:  	- message send to the grid<br>
</ul><p>API Tags:<br>
Access:  	public<p><div class="banner">setUserTime( string $newformat  )</div><p>Set a new user datetime format using PHP convensions<br>
Parameters:<br>
<ul>

<li> string   	$newformat:  	- the new format<br>
</ul><br>
API Tags:<br>
Access:  	public<br>

</div>


</div><hr />
<div class="footer">
	Last Updated: 02/22/12 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>