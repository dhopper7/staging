<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Methods requiering jQuery UI library</title>
	<link rel="stylesheet" type="text/css" href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.css">
		  <script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/TOPIC.gif">&nbsp;Methods requiering jQuery UI library
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body"><h3>Requirements and installation</h3><p>In order to use these methods is necessary to include additionally the jQuery UI library in the head section of the document. For more information how to download the jQuery UI library visit <a href="http://jqueryui.com/docs/Getting_Started" target="top">here</a><br>
After downloading the jQuery UI your configuration can look like this: <br>
<pre><div class="htmlcode"><span class="elements">&lt;!DOCTYPE</span> html PUBLIC <span class="codestring">"-//W3C//DTD XHTML 1.0 Strict//EN"</span> <span class="codestring">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"</span>&gt;
<span class="elements">&lt;html</span> xmlns=<span class="codestring">"http://www.w3.org/1999/xhtml"</span> xml:lang=<span class="codestring">"en"</span> <span class="attributes">lang=</span><span class="codestring">"en"</span>&gt;
<span class="elements">&lt;head&gt;</span>
<span class="elements">&lt;meta</span> <span class="attributes">http-equiv=</span><span class="codestring">"Content-Type"</span> <span class="attributes">content=</span><span class="codestring">"text/html; charset=utf-8"</span> /&gt;
<span class="elements">&lt;title&gt;</span>My First Grid<span class="elements">&lt;/title&gt;</span>
 
<span class="elements">&lt;link</span> <span class="attributes">rel=</span><span class="codestring">"stylesheet"</span> <span class="attributes">type=</span><span class="codestring">"text/css"</span> <span class="attributes">media=</span><span class="codestring">"screen"</span> <span class="attributes">href=</span><span class="codestring">"css/ui-lightness/jquery-ui-1.8.2.custom.css"</span> /&gt;
<span class="elements">&lt;link</span> <span class="attributes">rel=</span><span class="codestring">"stylesheet"</span> <span class="attributes">type=</span><span class="codestring">"text/css"</span> <span class="attributes">media=</span><span class="codestring">"screen"</span> <span class="attributes">href=</span><span class="codestring">"css/ui.jqgrid.css"</span> /&gt;
 
<span class="elements">&lt;script</span> <span class="attributes">src=</span><span class="codestring">"js/jquery-1.3.2.min.js"</span> <span class="attributes">type=</span><span class="codestring">"text/javascript"</span>&gt;<span class="elements">&lt;/script&gt;</span>
<span class="elements">&lt;script</span> <span class="attributes">src=</span><span class="codestring">"js/jquery-ui-1.8.2.custom.min.js"</span> <span class="attributes">type=</span><span class="codestring">"text/javascript"</span>&gt;<span class="elements">&lt;/script&gt;</span>
<span class="elements">&lt;script</span> <span class="attributes">src=</span><span class="codestring">"js/i18n/grid.locale-en.js"</span> <span class="attributes">type=</span><span class="codestring">"text/javascript"</span>&gt;<span class="elements">&lt;/script&gt;</span>
<span class="elements">&lt;script</span> <span class="attributes">src=</span><span class="codestring">"js/jquery.jqGrid.min.js"</span> <span class="attributes">type=</span><span class="codestring">"text/javascript"</span>&gt;<span class="elements">&lt;/script&gt;</span>
 
<span class="elements">&lt;/head&gt;</span>
<span class="elements">&lt;body&gt;</span>
...
<span class="elements">&lt;/body&gt;</span>
<span class="elements">&lt;/html&gt;</span></div></pre><p>Where <b>jquery-ui-1.8.2.custom.min.js</b> is the jQuery UI library.<br>
In order to overcome some confusions we recommend to download the full version of the UI library.<p><h3>Column Chooser</h4><p>With this method we can reorder columns and set visible and hidden columns in the grid.<br>
Calling convetions:<p>$grid-&gt;callGridMethod('#grid','columnChooser');<br>
or<br>
$grid-&gt;callGridMethod('#grid','columnChooser', array(options));<p>where options is a array with properties listed below #grid is the id of the grid anf $grid is the grid object created with jqGridRender method<p>To see Column Chooser dialog like on the picture above, one should include ui.multiselect.css and ui.multiselect.js before jqGrid.<br>
The plugin and the CSS file are bounded with the package, so there is no need to download it separatley.<p>After calling this a modal dialog appear where the user can reorder columns and set which of them can be visible and which of them can be hidden. <p><img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/images/columnchooser.jpg" /><p>Since the method usually is a attched to button click it can be used with setJSCode methods.<br>
Another possibility is to add a button at pager and call the grid method navButtonAdd. Below is example how to do this using the <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v90ki3d8.htm" >following tutorial</a><p><pre><div class="csharpcode">&lt;?php
require_once <span class="codestring">'jq-config.php'</span>;
<span class="codecomment">// include the jqGrid Class</span>
require_once <span class="codestring">"php/jqGrid.php"</span>;
<span class="codecomment">// include the driver class</span>
require_once <span class="codestring">"php/jqGridPdo.php"</span>;
....
<span class="codecomment">// add a custom button via the build in callGridMethod
// note the js: before the function</span>
$colChooser = <&lt; COLCH
<span class="programcontrol">function</span>() 
{
jQuery(<span class="codestring">"#grid"</span>).jqGrid(<span class="codestring">'columnChooser'</span>,{title:<span class="codestring">'My Column Chooser'</span>});
}
COLCH;
$buttonoptions = <span class="datatypes">array</span>(<span class="codestring">"#pager"</span>,
    <span class="datatypes">array</span>(<span class="codestring">"caption"</span>=&gt;<span class="codestring">"Column Chooser"</span>, <span class="codestring">"onClickButton"</span>=&gt;<span class="codestring">"js:"</span>.$colChooser)
);
$grid-&gt;callGridMethod(<span class="codestring">"#grid"</span>, <span class="codestring">"navButtonAdd"</span>, $buttonoptions); 

$grid-&gt;renderGrid(<span class="codestring">'#grid'</span>,<span class="codestring">'#pager'</span>,<span class="literals">true</span>, <span class="literals">null</span>, <span class="literals">null</span>, <span class="literals">true</span>,<span class="literals">true</span>);
$conn = <span class="literals">null</span>;
?&gt;</div></pre><p>Below is the list of options that can be used for this method<p>
<TABLE WIDTH=100% BORDER=1 BORDERCOLOR="#000000" CELLPADDING=2 CELLSPACING=0>
	<TR VALIGN=TOP>
		<TH  >
			<P>Name</P>
		</TH>
		<TH  >
			<P>Type</P>
		</TH>
		<TH  >
			<P>Description</P>
		</TH>
		<TH  >
			<P>Default</P>
		</TH>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>title</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Title of the modal dialog</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>See $.jgrid.col.title in language file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>width</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>number</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Set the width of the dialog in pixels</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>420</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>height</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>number</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Set the height of the dialog in pixels</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>240</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>classname</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Class which will be added to the selector where the
			selects are build</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>done</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Function which will be called when the user press Ok
			button. In the current implementation we cal remapColumns method
			in order to reorder the columns</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT><BR>
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>msel</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>mixed</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>msel is either the name of a ui widget class that
			extends a multiselect, or a function that supports creating a
			multiselect object (with no argument, or when passed an object),
			and destroying it (when passed the string &ldquo;destroy&rdquo;) 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>multiselect</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>dlog</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>mixed</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>dlog is either the name of a ui widget class that
			behaves in a dialog-like way, or a function, that supports
			creating a dialog (when passed dlog_opts) or destroying a dialog
			(when passed the string &ldquo;destroy&rdquo;)</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>dialog</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>dlog_opts</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>mixed</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>dlog_opts is either an option object to be passed to
			&ldquo;dlog&rdquo;, or (more likely) a function that creates the
			options object. The default produces a suitable options object for
			ui.dialog 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT><BR>
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>cleanup</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Function to cleanup the dialog, and select. Also
			calls the done function with no permutation (to indicate that the
			columnChooser was aborted</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT><BR>
			</P>
		</TD>
	</TR>
</TABLE>
<p><h3>Sortable Rows</h3><p>This method allows reordering (sorting) grid rows in a visual manner using a mouse.<br>
Calling convetions:<p>$grid-&gt;callGridMethod('#grid','sortableRows', array(options));<p>where options is a array with properties listed below #grid is the id of the grid anf $grid is the grid object created with jqGridRender method<br>
The method is fully compatible with jQuery UI sortable widget. This means that we can set any option and event available in this widget. For more information on the options and events look<a href="http://jqueryui.com/demos/sortable/" target="top"> here</a><br>
Method can be calles using the setJSCode method.<p><h4>Known problems</h4><p><ul>

<li> Currently this method does not work correct in FireFox versions 3.0.x, Chrome and Safari browsers due to little problem in sortable widget, which we hope they will be corrected in future release of jQuery UI.<br>
<li> Method does not work currently when treeGrid is enabled - i.e. you can not use the method to reorder tree rows.<br>
</ul><p><br>
<h3>Resizable Grid</h3><p>This method allow to re size the grid width and/or height in visual manner using a mouse. <br>
Calling convetions:<p>$grid-&gt;callGridMethod("#grid,'gridResize', array(options));<p>where options is a array with properties listed below #grid is the id of the grid anf $grid is the grid object created with jqGridRender method<br>
The method is fully compatible with jQuery UI resizable widget. This means that we can set any option and event available in this widget. For more information on the options and events look<a href="http://jqueryui.com/demos/resizable/" target="top"> here</a><br>
Method can be calles using the setJSCode method.<p><h4>Known problems</h4><p><ul>

<li> Using the grid hide button (the button in the caption) does not hide the content created from the resizable widget. This cause appearing of borders of the grid after it is hidden.<br>
</ul><p><h3>Drag and Drop rows between grids</h3><p>This method allow drag and drop rows between two or more grids using a mouse.<p>Calling convetions:<p>$grid-&gt;callGridMethod('#grid','gridDnD', array(options));<p>where options is a array with properties listed below #grid is the id of the grid anf $grid is the grid object created with jqGridRender method<p>
<TABLE WIDTH=100% BORDER="1">
	<TR VALIGN=TOP>
		<TH  >
			<P>Name</P>
		</TH>
		<TH  >
			<P>Type</P>
		</TH>
		<TH  >
			<P>Description</P>
		</TH>
		<TH  >
			<P>Default</P>
		</TH>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>connectWith</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Determines the target grid(s) to which the row
			should be dropped. The option is a string. In case of more than
			one grid the ids should be delemited with comma - i.e &rdquo;#grid1,
			#grid2&rdquo; 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>empty string</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>onstart</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This event raises when we start drag a row from the
			source grid (i.e. to which this method is applied). Parameters
			passed to this event are the event handler and a prepared ui
			object. For more information refer to <A HREF="http://jqueryui.com/demos/draggable/#event-start">jQuery
			UI draggable events</A> 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>onstop</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This event is triggered when dragging stops.
			Parameters passed to this even are the event handler and a
			prepared ui object. For more information refer to <A HREF="http://jqueryui.com/demos/draggable/#event-stop">jQuery
			UI draggable events</A></P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>beforedrop</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This event raises before droping the row to the grid
			specified in connectWith option. Parameters passed to this event
			are the event handler, prepared ui object, data which will be
			inserted into the grid in name value pair, source grid object and
			target(this) grid object. <BR> If the event return object in value
			name pair this object will be inserted into the target grid.</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>ondrop</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This event raises after the droping the row to the
			grid specified in connectWith option. Parameters passed to this
			event are the event handler, prepared ui object, data which is
			inserted into the grid in name value pair. For more information
			refer to <A HREF="http://jqueryui.com/demos/droppable/#event-drop">jQuery
			UI droppable events</A></P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>drop_opts</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>object</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Predefined options which can be applied to the
			droppable grid (specified with connectWith option above). Also you
			can set any option and event (except drop event which is replaced
			with ondrop event listed above). For more information refer to
			<A HREF="http://jqueryui.com/demos/droppable/">jQuery UI droppable</A>
						</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>{ activeClass : &ldquo;ui-state-active&rdquo;, <BR>
			hoverClass : &ldquo;ui-state-hover&rdquo; <BR> } 
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>drag_opts</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>object</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Predefined options which can be applied to the
			draggable grid (i.e. to which this method is applied). Also you
			can set any option and event (except start and stop events which
			are replaced with onstart and onstop events listed above). For
			more information refer to <A HREF="http://jqueryui.com/demos/draggable/">jQuery
			UI draggable</A> 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>{ revert: &ldquo;invalid&rdquo;, <BR> helper:
			&ldquo;clone&rdquo;, <BR> cursor: &ldquo;move&rdquo;, <BR>
			appendTo : &rdquo;#jqgrid_dnd&rdquo;, <BR> zIndex: 5000 <BR> } 
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>dropbyname</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>If set to true this means that only fields that have
			equal names will be added to the target grid. Note that we use
			addRowData to insert new row, which means that if some field with
			name &ldquo;a&rdquo; on source grid is hidden they can appear on
			the target grid. The default value of false mean that the grid
			data will be added to the target counted from the first column
			from source.</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>droppos</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>Determines where to add the new row. Can be first
			which mean as first row of the grid and last - as last row in the
			target grid. 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>first</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>autoid</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This option determines how the new row id should be
			generated. If this option is true we generate a id wich begin with
			string setted with the option autoidprefix (see below) and a
			random number. If this option is false the id can be either the
			the next record count or value determined by key property in
			colModel. <BR> If the parameter is defined as function this
			function should return value which will act as id to the target
			grid. Parameters passed in this case is the data array which will
			be inserted into the target grid row</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>true</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD  >
			<P ALIGN=LEFT>autoidprefix</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>This option have sense only if the option autoid is
			set to true and determines the prefix of the new genearted id. 
			</P>
		</TD>
		<TD  >
			<P ALIGN=LEFT>dnd_</P>
		</TD>
	</TR>
</TABLE>
<p><b>Known problems</b><p><ul>

<li> The method does not work well in Safari and Chrome because of the bug in the draggable widget. The effect is that the entry text is selected bellow the draggable row<br>
</ul><p><b>Example:</b><p>Let suppose that two grids are created with grid1.php and grid2.php files and the ids of the grids are respectivley #grid1 and #grid2.<br>
Lets suppose that the file grid2.php is included after the file grid1.php, then in file grid2.php the following code will connect both grids, so that we can drag and drop rows between them<p><pre><div class="csharpcode"><span class="codecomment">// file grid2.php</span>
require_once <span class="codestring">'jq-config.php'</span>;
<span class="codecomment">// include the jqGrid Class</span>
require_once <span class="codestring">"php/jqGrid.php"</span>;
<span class="codecomment">// include the driver class</span>
require_once <span class="codestring">"php/jqGridPdo.php"</span>;
....

$grid-&gt;callGridMethod(<span class="codestring">'#grid1'</span>,<span class="codestring">'gridDnD'</span>, <span class="datatypes">array</span>(<span class="datatypes">array</span>(<span class="codestring">"connectWith"</span>=&gt;<span class="codestring">"#grid2"</span>)));
$grid-&gt;callGridMethod(<span class="codestring">'#grid2'</span>,<span class="codestring">'gridDnD'</span>, <span class="datatypes">array</span>(<span class="datatypes">array</span>(<span class="codestring">"connectWith"</span>=&gt;<span class="codestring">"#grid1"</span>)));
$grid-&gt;renderGrid(<span class="codestring">'#grid2'</span>,<span class="codestring">'#pager'</span>,<span class="literals">true</span>, <span class="literals">null</span>, <span class="literals">null</span>, <span class="literals">true</span>,<span class="literals">true</span>);</div></pre>
</div>


</div><hr />
<div class="footer">
	Last Updated: 03/18/11 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>