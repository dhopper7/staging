<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Search Options and Events</title>
	<link rel="stylesheet" type="text/css" href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.css">
		  <script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/TOPIC.gif">&nbsp;Search Options and Events
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body">As of version 4.0 the following new features are available<p><ul>

<li> Support multiple grouping which means that a complex search crieteria can be build something like: <br>
WHERE ( (field1 &gt; 1 AND field1 &lt; 10)  OR  (field1 LIKE 'a%') )<br>
<li> Search templates which simplify the user searching on most used search expressions<br>
<li> Validating user input when search. In irder to do this a searchrules property should be set<br>
<li> Showing the builded query <br>
</ul><p><br>
Searching is a way to search data (at server) on one or more field(s) at a time. When using this method we construct a modal form where the user can select a field and condition to apply the search. By default the search dialog is configured to use searching on multiple fields.<br>
In order to change a option or event connected with the serching the following two methods should be used<br>
<b><br>
setNavEvent<br>
setNavOptions</b><p>with first parameter 'search'<p>By example if you want that the modal window should be not draggable do this<p><pre>
$grid-&gt;setNavOptions('search',array("drag"=&gt;false));
</pre><p>This method uses the following properties from language file grid.locale-xx and the can be passed in the options array of the serch method<br>
<pre><div class="csharpcode">$.jgrid = {
...
   search : {
     caption: <span class="codestring">"Search..."</span>,
     Find: <span class="codestring">"Find"</span>,
     Reset: <span class="codestring">"Reset"</span>,
     odata : [<span class="codestring">'equal'</span>, <span class="codestring">'not equal'</span>, <span class="codestring">'less'</span>, <span class="codestring">'less or equal'</span>,<span class="codestring">'greater'</span>,<span class="codestring">'greater or equal'</span>, <span class="codestring">'begins with'</span>,<span class="codestring">'does not begin with'</span>,<span class="codestring">'is in'</span>,<span class="codestring">'is not in'</span>,<span class="codestring">'ends with'</span>,<span class="codestring">'does not end with'</span>,<span class="codestring">'contains'</span>,<span class="codestring">'does not contain'</span>],
     <del>groupOps: [ { op: <span class="codestring">"AND"</span>, text: <span class="codestring">"all"</span> }, { op: <span class="codestring">"OR"</span>, text: <span class="codestring">"any"</span> } ],
     matchText: <span class="codestring">" match"</span>,
     rulesText: <span class="codestring">" rules"</span></del>
   },
...</div></pre><p>
<table class="detailtable" width="96%">
	<TR VALIGN=TOP>
		<TH>
			<P>Option</P>
		</TH>
		<TH>
			<P>Type</P>
		</TH>
		<TH>
			<P>Description</P>
		</TH>
		<TH>
			<P>Default</P>
		</TH>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>afterShowSearch</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This event fires (if defined) every time after the
			search dialog is shown</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>beforeShowSearch</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This event fires (if defined) every time before the
			search dialog is shown</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>drag</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Enables or disables draging of the modal</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>true</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>caption</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The caption of the modal</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>closeAfterSearch</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set to true this closes the search dialog after
			the user apply a search - i.e. click on Find button</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>closeOnEscape</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set to true the dialog is closed when the user
			pres ESC key</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>Find</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The text in the find button</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>groupOps</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>translations strings used in advanced searching</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>matchText</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Translation text used in advanced searching</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>modal</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Set if the search dialog shopuld be modal </P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>

	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>overlay</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>integer</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Set the overlay of the search dialog. If set to 0 no overlay and the dialog can stay interactive allowing any other interactions into the page</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>10</P>
		</TD>
	</TR>


	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>multipleSearch</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set to true this activates the advanced searching</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>multipleGroup</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set to true this activates searching with multiple complex groups</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>

	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>top</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>integer</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The top position of the dialog relative to grid upper left corner</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>0</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>left</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>integer</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The left position of the dialog relative to grid upper left corner</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>0</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>showQuery</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set to true show the builded query to the user below the caption of the modal</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>errorcheck</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This option determines if the validation should be performed - i.e if a rules are defined and there is a error in user input then the search is not performed</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>true</P>
		</TD>
	</TR>

	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>showOnLoad</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The option is valid if the dialog is a part of the pager. Setting this option to true activates the search dialog if the grid is constructed</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>

	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>tmplNames</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The option should be used wit tmplFilters and sets the names of the user defined search template criterias</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>empty</P>
		</TD>
	</TR>

	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>tmplFilters</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>empty array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Stores the diffterent user defined templates. Every element in the array is object with the appropriate setting. See the exmples how to set up templates </P>
		</TD>
		<TD>
			<P ALIGN=LEFT>empty array</P>
		</TD>
	</TR>


	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>odata</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Translation strings that corresponds to the sopt
			options</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>onClose</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If defined this event fires when the dialog is
			closed. Can return true or false. If the event return false the
			dialog will not be closed</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>onInitializeSearch</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This event occurs only once when the modal is
			created</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>null</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>recreateFilter</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>When set to true the entry filter is destroyed
			unbinding all the events and it is constructed again. Use this
			option if you change dynamically some properties in colModel, so
			that they have effect</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>false</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>Reset</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The text for the clear (reset) button</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>rulesText</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Translation text used in advanced searching</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>see lang file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sField</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>See <EM>sopt</EM> description</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>searchField</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sFilter</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Aplicable to multiple searching.
						</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>filters</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sOper</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>See <EM>sopt</EM> description</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>searchOper</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sopt</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>Use this option to set common search rules. If not
			set all the available options will be used. All available option
			are:
			['eq','ne','lt','le','gt','ge','bw','bn','in','ni','ew','en','cn','nc']
			The corresponding texts are in language file and mean the
			following: ['equal','not equal', 'less', 'less or
			equal','greater','greater or equal', 'begins with','does not begin
			with','is in','is not in','ends with','does not end
			with','contains','does not contain'] Note that the elements in
			sopt array can be mixed in any order.</P>
		</TD>
		<TD>
			<P ALIGN=LEFT><BR>
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sValue</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>See <EM>sopt</EM> description</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>searchString</P>
		</TD>
	</TR>
</TABLE>
<p><div class="banner">searchoptions hat can be set in colModel contain the following properties</div><p>
<table class="detailtable" width="96%">
	<TR VALIGN=TOP>
		<TH>
			<P>Property</P>
		</TH>
		<TH>
			<P>Type</P>
		</TH>
		<TH>
			<P>Description</P>
		</TH>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>dataUrl</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This option is valid only for the elements of type
			select - i.e stype:'select'. The option represent the url from
			where we load the select element. When this option is set the
			element will be filled with values from the ajax request. The data
			should be a valid html select element with the desired options. By
			example the request should contain &lt;select&gt;&lt;option
			value=&ldquo;1&rdquo;&gt;One&lt;/option&gt; &lt;option
			value=&ldquo;2&rdquo;&gt;Two&lt;/option&gt;&lt;/select&gt;. This
			is called only once.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>buildSelect</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This option have sense only if the dataUrl parameter
			is set. In case where the server response can not build the select
			element you can use your on function to build the select. The
			function should return a string containing the select and options
			value(s) as described in dataUrl option. Parameter passed to this
			function is the server response</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>dataInit</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If set this function is called only once when the
			element is created. To this function we pass the element object.<BR>
			dataInit: function(elem) { <BR> do something <BR> } <BR> Also use
			this function to attach datepicker, time picker and etc. Example:
			<BR> dataInit : function (elem) {<BR> $(elem).datepicker();<BR> }</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>dataEvents</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>List of events to apply to the data element; uses
			$(&rdquo;#id&rdquo;).bind(type, [data], fn) to bind events to data
			element. Should be described like this: <BR> dataEvents: [ <BR> {
			type: 'click', data: { i: 7 }, fn: function(e) {
			console.log(e.data.i); }},<BR> { type: 'keypress', fn: function(e)
			{ console.log('keypress'); } } <BR> ]</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>attr</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>object</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>attr is object where we can set valid attributes to
			the created element. By example: <BR> attr : { title: &ldquo;Some
			title&rdquo; } <BR> Will set a title of the searched element</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>searchhidden</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>By default hidden elemnts in the grid are not
			searchable . In order to enable searching when the field is hidden
			set this option to true</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>sopt</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>array</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This option is used only in advanced single field
			searching and determines the operation that is applied to the
			element. If not set all the available options will be used. All
			available option are: <BR>
			['eq','ne','lt','le','gt','ge','bw','bn','in','ni','ew','en','cn','nc']
			<BR> The corresponding texts are in language file and mean the
			following: <BR> ['equal','not equal', 'less', 'less or
			equal','greater','greater or equal', 'begins with','does not begin
			with','is in','is not in','ends with','does not end
			with','contains','does not contain'] <BR> Note that the elements
			in sopt array can be mixed in any order.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>defaultValue</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>string</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>If not empty set a default value in the search input
			element.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>value</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>mixed</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>The option is used only for stype select and defines
			the select options in the search dialogs. When set for stype
			select and dataUrl option is not set, the value can be a string or
			object. <BR> If the option is a string it must contain a set of
			value:label pairs with the value separated from the label with a
			colon (:) and ended with(;). The string should not ended with a
			(;)- editoptions:{value:&ldquo;1:One;2:Two&rdquo;}.If set as
			object it should be defined as pair name:value -
			editoptions:{value:{1:'One';2:'Two'}} 
			</P>
		</TD>
	</TR>
</TABLE>
<p><br>
<div class="banner">searchrules</div>

This option add additional properties to the search element and should be used in colModel. It is used to validate the user input before submitting the search(s) to the server.<p>Syntax:<br>
<pre>
&lt;?php
....
$grid-&gt;setColModel(...);
$grid-&gt;setColProperty('somefield',array( "searchrules"=&gt;array("searchhidden"=&gt;true, "required"=&gt;true...), ..));
...

$grid-&gt;renderGrid(...);
...
?&gt;
</pre>

Below is the list of available options:<br>

<table class="detailtable" width="96%">
	<TR VALIGN=TOP>
		<TH>
			<P>Option</P>
		</TH>
		<TH>
			<P>Type</P>
		</TH>
		<TH>
			<P>Description</P>
		</TH>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>searchhidden</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>This option is valid only in search module. By
			default the hidden fields are not searchable. If the field is hidden
			in the grid and searchhidden is set to true, the field appear in search
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>required</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>(true or false) if set to true, the value will be
			checked and if empty, an error message will be displayed.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>number</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>(true or false) if set to true, the value will be
			checked and if this is not a number, an error message will be
			displayed.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>integer</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>(true or false) if set to true, the value will be
			checked and if this is not a integer, an error message will be
			displayed.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>minValue</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>number(integer)</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set, the value will be checked and if the value
			is less than this, an error message will be displayed.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>maxValue</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>number(integer)</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set, the value will be checked and if the value
			is more than this, an error message will be displayed.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>email</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set to true, the value will be checked and if
			this is not valid e-mail, an error message will be displayed</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>url</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set to true, the value will be checked and if
			this is not valid url, an error message will be displayed</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>date</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set to true a value from datefmt option is get
			(if not set ISO date is used) and the value will be checked and if
			this is not valid date, an error message will be displayed</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>time</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set to true, the value will be checked and if
			this is not valid time, an error message will be displayed.
			Currently we support only hh:mm format and optional am/pm at the
			end</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>custom</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>boolean</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>if set to true allow definition of the custom
			checking rules via a custom function. See below</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD>
			<P ALIGN=LEFT>custom_func</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>function</P>
		</TD>
		<TD>
			<P ALIGN=LEFT>this function should be used when a custom option is
			set to true. Parameters passed to this function are the value,
			which should be checked and the name - the property from colModel.
			The function should return array with the following parameters:
			first parameter - true or false. The value of true mean that the
			checking is successful false otherwise; the second parameter have
			sense only if the first value is false and represent the error
			message which will be displayed to the user. Typically this can
			look like this [false,&rdquo;Please enter valid value&rdquo;]</P>
		</TD>
	</TR>
</TABLE>
<p>
</div>


</div><hr />
<div class="footer">
	Last Updated: 02/22/12 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>