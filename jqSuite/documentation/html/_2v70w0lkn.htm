<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Methods</title>
	<link rel="stylesheet" type="text/css" href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.css">
		  <script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/TOPIC.gif">&nbsp;Methods
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body">Othe public methods that can be used within this class can be seen <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v212lraf.htm" >jqGrid Class Methods</a>: <br>
and here in <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v611tfwr.htm" >jqGrid Edit Class Methods</a><p><div class="banner">addCol( $aproperties, [mixed $position = 'last']  )</div><p>Add a column at the first or last position in the colModel and sets a certain properties to it<p>Parameters:<br>
<ul>

<li> array   	$aproperties:  	data representing the column properties - including name, label...<br>
<li> string   	$position:  	can be first or last - default is first.  If a number is set the column is added before the position corresponded to the position in colModel<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">callGridMethod( string $grid, string $method, [ $aoptions = null]  )</div><p>JavaScript code for execution of valid <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2yh0uuou0.htm" >grid method</a>. This code is putted after the creation of the grid.<p>Parameters:<br>
<ul>

<li> string   	$grid:  	valid grid id should be putted as #mygrid<br>
<li> string   	$method:  	valid grid method<br>
<li> array   	$aoptions:  	contain the parameters passed to the method. Omit this parameter if the method does not have parameters<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">getColModel( )</div><p>Return array of the generated colModel. Should be called after setColModel<p>API Tags:<br>
Access:  	public<p><div class="banner">getGridOption( string $key  )</div><p>Return a <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w5c4u.htm" >jqGrid option</a> specified by the key, false if the option can not be found.<br>
Parameters:<br>
string   	$key:  	the name of the grid option<p>API Tags:<br>
Access:  	public<p><div class="banner">renderGrid( [string $tblelement = ''], [string $pager = ''], [boolean $script = true], [ $summary = null], [ $params = null], [boolean $createtbl = false], [boolean $createpg = false], [boolean $echo = true]  )<br>
</div>

Main method which do allmost everthing for the grid. Construct the grid, perform CRUD operations, perform Query and serch operations, export to excel, set a jqGrid method, and javascript code<p>Parameters:<br>
<ul>

<li> string   	$tblelement:  	the id of the table element to costrict the grid<br>
<li> string   	$pager:  	the id for the pager element<br>
<li> boolean   	$script:  	if set to true add a script tag before constructin the grid.<br>
<li> array   	$summary:  	- set which columns should be <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v212ria8.htm" >sumarized</a> in order to be displayed to the grid<br>
<li> array   	$params:  	<a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v212pj0p.htm" >parameters</a> passed to the query<br>
<li> boolean   	$createtbl:  	if set to true the table element is created automatically from this method. Default is false<br>
<li> boolean   	$createpg:  	if set to true the pager element is created automatically from this script. Default false.<br>
<li> boolean   	$echo:  	if set to false the function return the string representing the grid<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">setAutocomplete( string $colname, [string $target = false], [mixed $data = ''], [array $options = null], [boolean $editing = true], [ $searching = false], boolean $seraching  )</div><p>Construct autocompleter used in the grid. The autocomplete can be used in the editing modules or/and in search module.<p>Parameters:<br>
<ul>

<li> string   	$colname:  	(requiered) valid colname in colModel<br>
<li> string   	$target:  	if set determines the input element on which the value will be set after the selection in the autocompleter<br>
<li> mixed   	$data:  	can be array or string which is the SQL command which is executed to obtain the values. The command can contain one, two or three fields. If the field in SQL command is one, then this this field will be displayed and setted as value in the element. If the fields in SQL command are two, then the second field will be displayed but the first will be setted as value in the element.<br>
<li> array   	$options:  	- array with options for the autocomplete. Can be all available options from jQuery UI autocomplete in pair name=&gt;value. In case of events a "js:" tag should be added before the value. Additionally to this the following options can be used - cache, searchType, ajaxtype, itemLiength. For more info refer to docs.<br>
<li> boolean   	$editing:  	determines if the autocomplete should be used in editing modules. Deafult is true<br>
<li> boolean   	$seraching:  	determines if the autocomplete should be present in the search module. Deafult is true.<br>
<li>    	$searching:  	<br>
</ul><br>
API Tags:<br>
Access:  	public<br>
Uses:  	jqAutocomplete - class. This requiere to include jqAutocomplete.php in order to work<p><p><div class="banner">setButtonOptions( string $exptype  ,  array $aoptions )</div><p><br>
Set a various options for the buttons on the navigator bar like tite, caption , icon.<br>
For the other CRUD buttons see parameters passed to the 'navigator'<br>
Parameters:<br>
<ul>

<li> string   	$exptype:  	The button which is placed in the pager. The name correspond of those of the navigator - can be excel, csv, pdf, columns.<br>
<li> array   	$aoptions:  	array containing the following keys - "caption", "title", "buttonicon"<br>
</ul><p>API Tags:<br>
Access:  	public<p><br>
<div class="banner">setColModel(  [ $model = null], [ $params = null], [ $labels = null]   )</div><p>Construct the column model of the grid. The model can be passed as array or constructed from the <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v30rqjke.htm" >SQL Query</a> . The method try to determine the primary key and if it is found set as key:true to the appropriate field. If the primary key can not be determined set the first field as key:true in the colModel. Return true on success.<br>
Parameters:<br>
<ul>

<li> array   	$model:  	if set construct the model ignoring the SQL command<br>
<li> array   	$params:  	parametters passed to the SQL query<br>
<li> array   	$labels:  	if this parameter is set the method set the labels in colModel. The array should be associative which key value correspond to the name of colModel<br>
</ul><p><p>API Tags:<br>
Access:  	public<p><div class="banner">setColProperty( mixed $colname, $aproperties  )</div><p>Set a new property in the constructed <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w5p2k.htm" >colModel</a>. Return true on success. Should be called after setColModel method.<br>
Parameters:<br>
<ul>

<li> mixed   	$colname:  	valid coulmn name or index in colModel<br>
<li> array   	$aproperties:  	the key name properties.<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">setDatepicker( string $colname, [array $options = null], [boolean $editing = true], [ $searching = true], boolean $seraching  )</div><p>Construct a pop up calender used in the grid. The datepicker can be used in the editing modules or/and in search module.<p>Parameters:<br>
<ul>

<li> string   	$colname:  	(requiered) valid colname in colModel<br>
<li> array   	$options:  	- array with options for the datepicker. Can be all available options from jQuery UI datepicker in pair name=&gt;value. In case of events a "js:" tag should be added before the value.<br>
<li> boolean   	$editing:  	determines if the datepicker should be used in editing modules. Deafult is true<br>
<li> boolean   	$seraching:  	determines if the datepicker should be present in the search module. Deafult is true.<br>
<li>    	$searching:  	<br>
</ul><p>API Tags:<br>
Access:  	public<br>
Uses:  	jqCalender - class. This requiere to include jqCalender.php in order to work<p><br>
<div class="banner">setFilterOptions( array $aoptions  )</div><p>Set options for the toolbar filter when enabled with $toolbarfilter<br>
Parameters:<br>
<ul>

<li> array   	$aoptions:  	valid options for the filterToolbar<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setGridEvent( string $event, string $code  )</div><p>Set a valid grid<a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w6ca2.htm" > event</a><br>
Parameters:<br>
<ul>

<li> string   	$event:  	- valid grid event<br>
<li> string   	$code:  	Javascript code which will be executed when the event raises<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">setGridOptions( array $aoptions  )</div><p>Set a <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w5c4u.htm" >grid options</a>. The method uses array with keys correspondingto the jqGrid options as described in jqGrid docs<p>Parameters:<br>
<ul>

<li> array   	$aoptions:  	A key name pair. Some options can be array to.<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setJSCode( string $code  )<br>
</div>

Put a javascript code after all things are created. The method is executed only once when the grid is created.<br>
Parameters:<br>
<ul>

<li> string   	$code:  	- javascript to be executed<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setNavEvent( string $module, string $event, string $code  )</div><p>Set a event in the navigator or in the diffrent modules add,edit,del,view, search<br>
Parameters:<br>
<ul>

<li> string   	$module:  	- can be navigator, add, edit, del, view, search<br>
<li> string   	$event:  	- valid event for the particular module<br>
<li> string   	$code:  	- javascript code to be executed when the event occur<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setNavOptions( string $module, array $aoptions  )</div><p>Set options in the navigator or in diffrent diffrent modules add,edit,del,view, search<br>
Parameters:<br>
<ul>

<li> string   	$module:  	- can be navigator, add, edit, del, view, search<br>
<li> array   	$aoptions:  	options that are applicable to this module The key correspond to the options in jqGrid<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setSelect( string $colname, mixed $data, [boolean $formatter = true], [boolean $editing = true], [boolean $seraching = true], [array $defvals = array()], string $sep = ":", string $delim=";"  )<br>
</div><p>Construct the html select used in the grid. The select element can be used in the editing modules, in formatter or in search module. The purpose of this method is to link other tables to desired filed.<p>Parameters:<br>
<ul>

<li> string   	$colname:  	(requiered) valid colname in colModel<br>
<li> mixed   	$data:  	can be array (with pair key value) or string which is the SQL command which is executed to obtain the values. The command should contain a minimun two fields. The first is the key and the second is the value whch will be displayed in the select<br>
<li> boolean   	$formatter:  	deternines that the select should be used in the formatter of type select. Default is true<br>
<li> boolean   	$editing:  	determines if the select should be used in editing modules. Deafult is true<br>
<li> boolean   	$seraching:  	determines if the select should be present in the search module. Deafult is true.<br>
<li> array   	$defvals:  	Set the default value if none is selected. Typically this is usefull in serch modules. Can be something like arrary(""=&gt;"All"); Note that this is puted only in the serch modules, but not in the editing one<br>
<li> string 	$sep: set the separator between the key and text  in the javascropt colModel when a select is build. Deafult is ":"<br>
<li> string 	$delim: set the delemiter between the options elemets  in the javascropt colModel when a select is build. Deafult is ";"<p></ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setSubGrid( [string $suburl = ''], [array $subnames = false], [array $subwidth = false], [array $subalign = false], [array $subparams = false]  )</div><p>Prepares a executuion of a simple subgrid Return false if no subnames options are set<br>
Parameters:<br>
<ul>

<li> string   	$suburl:  	Url from where to get the data<br>
<li> array   	$subnames:  	Required - the names that should correspond to fields of the data<br>
<li> array   	$subwidth:  	(optional) - sets a width of the subgrid columns. Default 100<br>
<li> array   	$subalign:  	(optional) - set the aligmend of the columns. default center<br>
<li> array   	$subparams:  	(optional) additional parameters that can be passed when the subgrid plus icon is clicked. The names should be present in colModel in order to pass the values<br>
</ul><br>
API Tags:<br>
Access:  	public<p><div class="banner">setSubGridGrid( string $suggridurl, array $subgridnames=null  )</div><p>Prepares a subgrid in the grid expecting any valid html content provieded via the $suggridurl<p>Parameters:<br>
<ul>

<li> string   	$suggridurl:  	url from where to get html content<br>
<li> array   	$subgridnames:  array containing a valid names from the generated colModel. In this case a pair name value (name provided in the array and the value from the corresponding clicked row) is added to the url and posted to the server. <br>
</ul><p>API Tags:<br>
Access:  	public<p><div class="banner">setUrl( string $newurl  )</div><p>Set a url for editing and the grid url from where to obtain the data.<p>Parameters:<br>
<ul>

<li> string   	$newurl:  	the new url<br>
</ul><br>
API Tags:<br>
Access:  	public<br>

</div>


</div><hr />
<div class="footer">
	Last Updated: 02/22/12 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>