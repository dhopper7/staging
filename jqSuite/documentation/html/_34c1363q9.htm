<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Methods</title>
	<link rel="stylesheet" type="text/css" href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.css">
		  <script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/TOPIC.gif">&nbsp;Methods
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body">All methods in this package with exception of renderChart method set a various options for the chart.<br>
Below we will list all the methods with its parameter.<p>Detailed description of the options is in Options chapter.<p><div class="banner"> jqChart addSeries( string $name, mixed $value, [array $params = null], [mixed $limit = false], [integer $offset = 0]  )</div><p>Add a data to the series with a given name. If the name exists the data will be overwritten. Data can be added via array, sql query or javascript function<p>Parameters:<br>
<ul>

<li> string   	$name:  	the name of the chart. This will be displayed in the chart<br>
<li> mixed   	$value:  	can be array, sql query and java script function.<br>
<li> array   	$params:  	parameters passed to the query in case of SQL data<br>
<li> mixed   	$limit:  	if set to number the number of records to retrieve<br>
<li> integer   	$offset:  	how many records to skip in case of sql.<br>
</ul><br>
API Tags:<br>
Return:  	instanceAccess:  	public<p><div class="banner">array getChartOptions( )</div><p>Return all the option for the Chart<p>API Tags:<br>
Access:  	public<p><p><div class="banner">string renderChart( [string $div_id = ''], [boolean $createlem = true], [mixed $width = '800'], [ $height = '400'], [string $chart = 'chart']  )<br>
</div>

Main method which construct the chart based on the optins set with the previous methods<br>
Parameters:<br>
<ul>

<li> string   	$div_id:  	the id of the chart element in the DOM. If empty the default name 'jqchart' is used.<br>
<li> boolean   	$createlem:  	if set to true a div element is created. If the option is set to false the previous option should be set in order to render the chart to a existing element.<br>
<li> mixed   	$width:  	set the width of the chart. If a number is used the width is created in pixels. Have sense only if $createlem is true<br>
<li>    	$height:  	set the height of the chart. If a number is used the height is created in pixels. Have sense only if $createlem is true<br>
<li> string   	$chart:  	the name which is used when a javascript chart object is created. Can be used later to refer to the chart. The default name is 'chart'<br>
</ul><br>
API Tags:<br>
Access:  	public<p><br>
<div class="banner">jqChart setChartEvent( string $name, string $jscode  )<br>
</div>

Set event listeners for the chart.<br>
Parameters:<br>
<ul>

<li> string   	$name:  	The name of the event, Can be click, load, redraw, selection See documentation for more details<br>
<li> string   	$jscode:  	The javascript code associated with this event<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setChartOptions( mixed $name, [mixed $mixvalue = '']  )</div><p>Options regarding the chart area and plot area as well as general chart options.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the chart. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	is the value option in case the name is string<br>
</ul><br>
API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setColors( array $avalue  )</div><p>Set array containing the default colors for the chart's series.<p>When all colors are used, new colors are pulled from the start again. Defaults to: array('#4572A7', '#AA4643', '#89A54E', '#80699B', '#3D96AE', '#DB843D', '#92A8CD', '#A47D7C', '#B5CA92')<br>
Parameters:<br>
<ul>

<li> array   	$avalue:  	values to be set for the colors<br>
</ul><br>
API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setExporting( mixed $name, [mixed $mixvalue = '']  )</div><p>Set options for the Exporting module<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><br>
API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setJSCode( string $code  )</div><p>Put a javascript code after all things are created. The method is executed only once when the chart is created.<br>
Parameters:<br>
<ul>

<li> string   	$code:  	- javascript to be executed<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setLabels( mixed $name, [mixed $mixvalue = '']  )</div><p>Set HTML labels that can be positioined anywhere in the chart area.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the label. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setLanguage( mixed $name, [mixed $mixvalue = '']  )</div><p>Set a language object. The default language is English. For detailed info on the object rehfer to the documentation<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the language. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p>setLegend  [line 225]<p><div class="banner">jqChart setLegend( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the legend. The legend is a box containing a symbol and name for each series item or point item in the chart.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the legend. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setLoading( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the loading options which control the appearance of the loading screen that covers the plot area on chart operations<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setNavigation( mixed $name, [mixed $mixvalue = '']  )</div><p>Set collection of options for buttons and menus appearing in the exporting module.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><br>
API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setPlotOptions( mixed $name, [array $avalue = '']  )</div><p>Set the plot options for the chart.<p>The plotOptions is a wrapper object for config objects for each series type. The config objects for each series can also be overridden for each series item as given in the series array<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the name of tyhe option as per documentation<br>
<li> array   	$avalue:  	array of options = key value pair<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setSeriesOption( [string $name = ''], [mixed $option = ''], [mixed $value = '']  )</div><p>Set a various options for a serie.<br>
Parameters:<br>
<ul>

<li> string   	$name:  	the name for the serie<br>
<li> mixed   	$option:  	can be a array or string. If array a key value pair should be used, where key is the properti value is the optinvalue<br>
<li> mixed   	$value:  	the value of the option value in case the option is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setSubtitle( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the subtitle of the chart<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setTheme(  string $name  )</div><p>Set the theme of the chart - currently we have the following themes - grid, blue, dark-green, dark-blue. The theme is searched in the current directory, so be a carfully when set the name of the theme. The theme can be set via url something like <br>
$chart-&gt;setTheme("http://example.com/grid.js");<br>
Parameters:<br>
<ul>

<li> string  	$name:  	the name or the url to the theme<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><br>
<div class="banner">jqChart setTitle( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the main title of the chart<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setTooltip( mixed $name, [mixed $mixvalue = '']  )</div><p>Set options for the tooltip that appears when the user hovers over a series or point<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setxAxis( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the X axis or category axis. Normally this is the horizontal axis, though if the chart is inverted this is the vertical axis.<p>In case of multiple axes, the xAxis node is an array of configuration objects.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p><div class="banner">jqChart setyAxis( mixed $name, [mixed $mixvalue = '']  )</div><p>Set the Y axis or value axis. Normally this is the vertical axis, though if the chart is inverted this is the horiontal axis. In case of multiple axes, the yAxis node is an array of configuration objects.<br>
Parameters:<br>
<ul>

<li> mixed   	$name:  	the option name for the loading. Can be a string or array. When used as array a key value pair should be defined, where the key is the name<br>
<li> mixed   	$mixvalue:  	a value option in case the name is a string<br>
</ul><p>API Tags:<br>
Return:  	instance<br>
Access:  	public<p>
</div>


</div><hr />
<div class="footer">
	Last Updated: 03/13/11 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>