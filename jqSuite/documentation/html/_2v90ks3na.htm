<!DOCTYPE html>
<html>
<head> 
	<topictype value="TOPIC" />
	<title>Form Editing (Edit Dialog)</title>
	<link rel="stylesheet" type="text/css" href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.css">
		  <script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/jquery.min.js" type="text/javascript"></script>
	<script src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/templates/wwhelp.js" type="text/javascript"></script>
	<script>
		// fix up code examples to display tabs	
			  $(function() { $("#example").codeExampleTabs(); });
	</script>
</head>
<body>
<div class="banner">
  <div>
	<span class="projectname">jqSuite php documentation</span>
 </div>
 <div class="topicname">
	<img src="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/bmp/TOPIC.gif">&nbsp;Form Editing (Edit Dialog)
 </div>
</div>

<div class="contentpane">

<div class="contentbody" id="body">Form editing is enabled by default when the navigator option is set to <b>true</b>. In order to customize the form editing options and events, you can use two available methods - <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w0lkn.htm" >setNavEvent</a> and <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70w0lkn.htm" >setNavOptions</a>.<p>In this case the first parameter of these methods should refer to to the appropriate editing module (add, edit, del).<p><pre>
$grid-&gt;setNavOptions('add',array(...));
$grid-&gt;setNavOptions('edit',array(...));
</pre><p>or<p><pre>
$grid-&gt;setNavEvent('add','java_script_code_here');
$grid-&gt;setNavEvent('edit','java_script_code_here');
</pre><p>The list of available editing options are:<p><ul>

<li> add - for adding a record<br>
<li> edit - for deleting a record<br>
<li> del - for deleting a record.<br>
</ul><p>For the full list of available options and events, please refer to the appropriate topics in <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v70u6eg2.htm" >jqGridRender Class</a><p>In this Tutorial we will consider two common tasks:<p><div class="banner">1. Editing a record when the primary key is serial (autoincremet) and there is a need to show it in the grid, but not in the editing form.</div><p>For this purpose we will use this  <a href="../../../jqSuitePHP_Sources_4_4_4_0/documentation/html/_2v90jgzqp.htm" >example</a> as a starting point.<p><pre><div class="csharpcode">&lt;?php
require_once <span class="codestring">'jq-config.php'</span>;
<span class="codecomment">// include the jqGrid Class</span>
require_once <span class="codestring">"php/jqGrid.php"</span>;
<span class="codecomment">// include the driver class</span>
require_once <span class="codestring">"php/jqGridPdo.php"</span>;
<span class="codecomment">// Connection to the server</span>
$conn = <span class="programcontrol">new</span> PDO(DB_DSN,DB_USER,DB_PASSWORD);
<span class="codecomment">// Tell the db that we use utf-8</span>
$conn-&gt;query(<span class="codestring">"SET NAMES utf8"</span>);

<span class="codecomment">// Create the jqGrid instance</span>
$grid = <span class="programcontrol">new</span> jqGridRender($conn);
<span class="codecomment">// Write the SQL Query</span>
$grid-&gt;SelectCommand = <span class="codestring">'SELECT OrderID, OrderDate, CustomerID, ShipName, Freight FROM orders'</span>;
<span class="codecomment">// Set output format to json</span>
$grid-&gt;dataType = <span class="codestring">'json'</span>;

<span class="codecomment">//set a table to be manipulated</span>
$grid-&gt;table = <span class="codestring">'orders'</span>;

<span class="codecomment">// set the primary key - it is serial</span>
$grid-&gt;setPrimaryKeyId(<span class="codestring">'OrderID'</span>);

<span class="codecomment">// Let the grid create the model</span>
$grid-&gt;setColModel();
<span class="codecomment">// Set the url from where we obtain and edit the data</span>
$grid-&gt;setUrl(<span class="codestring">'grid.php'</span>);

<span class="codecomment">//do not allow this field to be editable</span>
$grid-&gt;setColProperty(<span class="codestring">'OrderID'</span>,<span class="datatypes">array</span>(<span class="codestring">"editable"</span>=&gt;<span class="literals">false</span>));

<span class="codecomment">// Set some grid options</span>
$grid-&gt;setGridOptions(<span class="datatypes">array</span>(
    <span class="codestring">"rowNum"</span>=&gt;10,
    <span class="codestring">"rowList"</span>=&gt;<span class="datatypes">array</span>(10,20,30),
    <span class="codestring">"sortname"</span>=&gt;<span class="codestring">"OrderID"</span>
));

<span class="codecomment">// enable form editing</span>
$grid-&gt;navigator = <span class="literals">true</span>;

$grid-&gt;renderGrid(<span class="codestring">'#grid'</span>,<span class="codestring">'#pager'</span>,<span class="literals">true</span>, <span class="literals">null</span>, <span class="literals">null</span>, <span class="literals">true</span>,<span class="literals">true</span>);
$conn = <span class="literals">null</span>;
?&gt;</div></pre><p>Lets consider the script with the commands:<p><pre><div class="htmlcode">$grid-&gt;table = <span class="codestring">'orders'</span>;
$grid-&gt;setPrimaryKeyId(<span class="codestring">'OrderID'</span>);</div></pre><p>We tell the script which is the table against which we should perform CRUD operation. We also define the primary key and that the key is serial (autoincrement)<p><pre><div class="htmlcode">$grid-&gt;setUrl(<span class="codestring">'grid.php'</span>);</div></pre><p>We tell the script that CRUD operations and query operations will be handled by the "grid.php" code file.<p><pre><div class="htmlcode">$grid-&gt;setColProperty(<span class="codestring">'OrderID'</span>,array(<span class="codestring">"editable"</span>=&gt;false));</div></pre><p>With this command we disable the editing of the primary key, but the field is still visible in the grid.<p>This is all the is needed to get automatic CRUD operation with jqGrid for PHP. The key command that does the magic here is:<p><pre><div class="htmlcode"><b>$grid-&gt;setPrimaryKeyId(<span class="codestring">'OrderID'</span>);</b></div></pre><p>Setting this in the script tells the grid to post the appropriate values when a CRUD operation is in action.<p><div class="banner">2.Editing a record when the primary key is not serial (autoincremet) and there is need to show the key in adding new record, but disable the key in edit mode.<br>
</div><p>For this purpose we will use the table "<b>customers</b>", where the table has a primary key, but this primary key is not serial and when the data is inserted the user should fill this key.<p><pre><div class="htmlcode">&lt;?php
require_once <span class="codestring">'jq-config.php'</span>;
// include the jqGrid Class
require_once <span class="codestring">"php/jqGrid.php"</span>;
// include the driver class
require_once <span class="codestring">"php/jqGridPdo.php"</span>;
// Connection to the server
$conn = new PDO(DB_DSN,DB_USER,DB_PASSWORD);
// Tell the db that we use utf-8
$conn-&gt;query(<span class="codestring">"SET NAMES utf8"</span>);

// Create the jqGrid instance
$grid = new jqGridRender($conn);
// Write the SQL Query
$grid-&gt;SelectCommand = <span class="codestring">'SELECT CustomerID, CompanyName, Phone, PostalCode, City FROM customers'</span>;
// Set the table to where you update the data
$grid-&gt;table = <span class="codestring">'customers'</span>;

$grid-&gt;setPrimaryKeyId(<span class="codestring">'CustomerID'</span>);
$grid-&gt;serialKey = false;

// Set output format to json
$grid-&gt;dataType = <span class="codestring">'json'</span>;
// Let the grid create the model
$grid-&gt;setColModel();
// Set the url from where we obtain the data
$grid-&gt;setUrl(<span class="codestring">'grid.php'</span>);
// Set some grid options
$grid-&gt;setGridOptions(array(
    <span class="codestring">"rowNum"</span>=&gt;10,
    <span class="codestring">"rowList"</span>=&gt;array(10,20,30),
    <span class="codestring">"sortname"</span>=&gt;<span class="codestring">"CustomerID"</span>
));
$grid-&gt;setColProperty(<span class="codestring">'CustomerID'</span>, array(<span class="codestring">"editoptions"</span>=&gt;array(<span class="codestring">"readonly"</span>=&gt;true), <span class="codestring">"editrules"</span>=&gt;array(<span class="codestring">"required"</span>=&gt;true)));

$enableadd = &lt;&lt;&lt;ENBLADD;
function(formid)
{
   jQuery(<span class="codestring">'#CustomerID'</span>,formid).removeAttr(<span class="codestring">"readonly"</span>);
}
ENBLADD;

$disableedit = &lt;&lt;&lt;DSBLEDIT;
function(formid)
{
   jQuery(<span class="codestring">'#CustomerID'</span>,formid).attr(<span class="codestring">"readonly"</span>,<span class="codestring">"readonly"</span>);
}
DSBLEDIT;

$grid-&gt;setNavEvent(<span class="codestring">'add'</span>,<span class="codestring">'beforeShowForm'</span>,$enableadd);
$grid-&gt;setNavEvent(<span class="codestring">'edit'</span>,<span class="codestring">'beforeShowForm'</span>,$disableedit);


// Enable navigator
$grid-&gt;navigator = true;

$grid-&gt;renderGrid(<span class="codestring">'#grid'</span>,<span class="codestring">'#pager'</span>,true, null, null, true,true);
$conn = null;
?&gt;</div></pre><p>The only diffrence with the first tutorial is that in this case we set two custom events in add and edit mode. In this case we use <b>beforeShowForm</b>.  In add mode we enable the input in the element removing the readonly attribute.<br>
In edit mode we disable the input using setting the input element to have readonly attribute.
</div>


</div><hr />
<div class="footer">
	Last Updated: 06/05/10 | 
	&copy TriRand Ltd, 2012
</div>
<br class="clear" />
<br />
</body>
</html>